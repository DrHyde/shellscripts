#!/bin/sh

MAKEFILEPL=Makefile.PL
MAKE=make

export RELEASE_TESTING=1
export PERL_USE_UNSAFE_INC=0
export DEVEL_HIDE_VERBOSE=0

if [ -e Build.PL ]; then
  MAKEFILEPL=Build.PL
  MAKE=./Build
fi
perl $MAKEFILEPL && $MAKE

MODULE=`grep -E \(module_name\|NAME\).*=\> $MAKEFILEPL|perl -pne "s/.*(module_name|NAME)/NAME/;s/NAME\s+=>\s+'//; s/'.*//"`

VERSION=`perl -Mblib -e "use $MODULE;print quotemeta(\\$$MODULE::VERSION)"`

export AUTHOR_TESTING=1

if perl -MJSON::Parse=json_file_to_perl -e '$p=json_file_to_perl("MYMETA.json");exit($p->{resources}->{bugtracker}->{web} eq $p->{resources}->{repository}->{url}."/issues" ? 1 : 0)'; then
    echo bugtracker and repository don\'t look right in meta-data
    exit 1
fi

grep -Ei copyright\\s\\d\\d\\d\\d $(git ls-files|grep -v inc/Devel/AssertOS|grep -v inc/Devel/CheckOS|grep -v \.txt$)|grep -vi maxmind|grep -vi somerville|grep -v $(date +%Y)
if [ $? == 0 ]; then
    echo Out of date copyrights found
    exit 1
fi
for i in $(git ls-files|grep -E ^lib/.*\\.\(pm\|pod\)$); do
    echo checking doco for $i
    grep -EHi ^=head1.DESCRIPTION $i
    if [ $? == 0 ]; then
        echo ... found a DESCRIPTION, checking for a NAME with a description
        grep -E -A2 ^=head1.NAME $i|tail -1|grep -- -
        if [ $? == 0 ]; then
            echo ... OK
        else
            echo Found a DESCRIPTION, merge it with NAME so better manpages are generated
            echo see https://github.com/DrHyde/perl-modules-Scalar-Type/pull/17
            exit 1
        fi
    fi
done

CHANGELOG=CHANGELOG
if [ -e Changes ]; then
  CHANGELOG=Changes
fi

if grep ^$VERSION $CHANGELOG |grep $(date +%Y-%m-%d); then
  if [ "$MODULE" == "Test::Differences" ]; then
    PERL5OPT=-MDevel::Hide=Unknown::Values $MAKE test || exit 1;

    for PERL in perl-5.34.0 perl-5.36.0 perl-5.38.0; do
        perlbrew exec --with $PERL sh -c "perl $MAKEFILEPL && $MAKE test" || exit 1;
    done
    # need to restore the configured version we created originally
    perl $MAKEFILEPL && $MAKE
  fi

  $MAKE test && \
  PERL5OPT=-MDevel::Hide=Test::Pod::Coverage,Test::Pod $MAKE test && \
  $MAKE dist && \
  echo if everything looks ok, ... && \
  echo "  " git tag -a -m \"$MODULE release $VERSION\" release-$VERSION |sed s/\\\\././g && \
  echo "  " git push --tags && \
  pwd|grep -q Number-Phone$ && \
  echo "  " \(cd data-files\;git tag -a -m \"$MODULE release $VERSION\" release-$VERSION\) |sed s/\\\\././g
  # this repo no longer has a remote
  # echo "  " \(cd data-files\;git push --tags\)
else
  echo No date found in \'$CHANGELOG\' file, or format doesn\'t look like CPAN::Changes::Spec. Is it up to date?
  exit 1
fi



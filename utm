#!/usr/bin/env bash

main () (
    ps aux|grep UTM.app/Contents/MacOS/UTM > /dev/null 2>&1 || (
        echo Need to start UTM
        open -a UTM
        sleep 5
    )

    VERB="$1"
    shift

    if [ "$VERB" == "list" ]; then
        list "$@"
    elif [ "$VERB" == "start" ]; then
        start "$@"
    elif [ "$VERB" == "stop" ]; then
        stop "$@"
    elif [ "$VERB" == "bounce" ]; then
        bounce "$@"
    else
        echo utm list\|start\|stop\|bounce
    fi
)

bounce () (
    MACHINE="$1"
    shift
    if [ "$MACHINE" == "all" ]; then
        for candidate in  $( list up ); do
            bounce "$candidate"
        done
    elif [ -z "$MACHINE" ]; then                     # no args? error
        echo utm bounce all\|\{list of machines\}
    elif [ ! -z "$1" ]; then                         # multi? iterate
        for candidate in "$MACHINE" "$@"; do
            bounce "$candidate"
        done
    elif [[ "$MACHINE" == *\** ]]; then              # wildcard? match and iterate
        for candidate in $( list up ); do
            if [[ "$candidate" == $MACHINE ]]; then
                bounce "$candidate"
            fi
        done
    else
        if grep ^$MACHINE\$ <( list up ) >/dev/null 2>/dev/null ; then
            stop "$MACHINE"
            while grep "^$MACHINE$" <( list started ) >/dev/null 2>&1; do
                sleep 5
                echo ... waiting
            done
            sleep 5
            start "$MACHINE"
        else
            echo What\'s $MACHINE?
        fi
    fi
)

stop () (
    MACHINE="$1"
    shift
    if [ "$MACHINE" == "all" ]; then
        for candidate in  $( list up ); do
            stop "$candidate"
        done
    elif [ -z "$MACHINE" ]; then
        echo utm stop all\|\{list of machines\}
    elif [ ! -z "$1" ]; then
        for candidate in "$MACHINE" "$@"; do
            stop "$candidate"
        done
    elif [[ "$MACHINE" == *\** ]]; then
        for candidate in $( list up ); do
            if [[ "$candidate" == $MACHINE ]]; then
                stop "$candidate"
            fi
        done
    else
        if grep ^$MACHINE\$ <( list up ) >/dev/null 2>/dev/null ; then
            echo stopping $MACHINE
            utmctl stop "$MACHINE" --request >/dev/null 2>/dev/null
            sleep 5
        else
            echo What\'s $MACHINE?
        fi
    fi
)

start () (
    MACHINE="$1"
    shift
    if [ "$MACHINE" == "all" ]; then
        for candidate in  $( list stopped ); do
            start "$candidate"
        done
    elif [ -z "$MACHINE" ]; then
        echo utm start all\|\{list of machines\}
    elif [ ! -z "$1" ]; then                         # multi? iterate
        for candidate in "$MACHINE" "$@"; do
            start "$candidate"
        done
    elif [[ "$MACHINE" == *\** ]]; then
        for candidate in $( list stopped ); do
            if [[ "$candidate" == $MACHINE ]]; then
                start "$candidate"
            fi
        done
    else
        if grep ^$MACHINE\$ <( list stopped ) >/dev/null 2>/dev/null ; then
            echo starting $MACHINE
            utmctl start $MACHINE >/dev/null 2>/dev/null
            while ! ping -c1 "$MACHINE" >/dev/null 2>&1; do
                echo ... waiting
                sleep 5
            done
        else
            echo What\'s $MACHINE?
        fi
    fi
)

list_complete() (
    utmctl list |grep -v UUID
)

listall () (
    list_complete |awk '{print $3}'
)

liststarted () (
    list_complete |awk '$2 ~ /started/ { print $3; next }'
)

listup () (
    for candidate in $( liststarted ); do
        ping -c1 $candidate >/dev/null 2>/dev/null && echo $candidate
    done
)

list () (
    TYPE="$1"
    shift
    if [ "$TYPE" == "started" ]; then
        liststarted
    elif [ "$TYPE" == "all" ]; then
        listall
    elif [ "$TYPE" == "up" ]; then
        listup
    elif [ "$TYPE" == "stopped" ]; then
        grep -v -f <( liststarted ) <( listall )
    else
        echo utm list all\|started\|up\|stopped
    fi
)

main "$@"
